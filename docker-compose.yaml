version: "3"

services:
  server:
    build:
      context: .
      dockerfile: ./Server/Dockerfile
    image: food-ordering-server
    ports:
      - "5000:80"
    environment:
      - ASPNET_ENVIRONMENT="Production"
    depends_on:
      - logichandler
    networks:
      - api
  logichandler:
    build:
      context: .
      dockerfile: ./LogicHandler/Dockerfile
    image: food-ordering-logichandler
    ports:
      - "8080:80"
    environment:
      - ASPNET_ENVIRONMENT="Production"
    depends_on:
      - rabbit
      - dbmigrator
    networks:
      - api
  dbmigrator:
    build:
      context: .
      dockerfile: ./Migrator/Dockerfile
    image: food-ordering-migrator
    environment:
      - DOTNET_ENVIRONMENT="Production"
    depends_on:
      - rabbit
      - db
    networks:
      - api
  rabbit:
    restart: on-failure
    image: rabbitmq:management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - rabbit-data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - api
  db:
    image: postgres
    restart: on-failure
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: dbpassword
    ports:
      - "5432:5432"
    networks:
      - api

networks:
  api:
    driver: bridge

volumes:
  rabbit-data:
  db-data:
